# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Tergum < Formula
  desc "Tergum Backup Tool"
  homepage "https://github.com/sikalabs/tergum"
  version "0.13.0"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/sikalabs/tergum/releases/download/v0.13.0/tergum_v0.13.0_darwin_amd64.tar.gz"
      sha256 "ea1c3d19b2c48d0878546d10845a53c7b6cc2f019126b1057c464da2db99dad8"
    end
    if Hardware::CPU.arm?
      url "https://github.com/sikalabs/tergum/releases/download/v0.13.0/tergum_v0.13.0_darwin_arm64.tar.gz"
      sha256 "128f18bd0ce2e734216e0e63c34c2f1f7bae7a58e3ed20b18d71d8390f61fb0b"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/sikalabs/tergum/releases/download/v0.13.0/tergum_v0.13.0_linux_amd64.tar.gz"
      sha256 "b102ab31b11a5fe2d2c79b66081587b5f566ccca10fc1b4c8adb1112b4f65dd1"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/sikalabs/tergum/releases/download/v0.13.0/tergum_v0.13.0_linux_arm64.tar.gz"
      sha256 "75d7160e4a4cf5dfb406ede371e75b1191e24a2121f13ffe6efa24a0e353493d"
    end
  end

  conflicts_with "tergum-edge"

  def install
    bin.install "tergum"
  end

  def caveats; <<~EOS
    How to use this binary: https://github.com/sikalabs/tergum
  EOS
  end

  test do
    system "#{bin}/tergum version"
  end
end
