# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class TergumEdge < Formula
  desc "Tergum Backup Tool"
  homepage "https://github.com/sikalabs/tergum"
  version "0.11.1"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/sikalabs/tergum/releases/download/v0.11.1/tergum_v0.11.1_darwin_amd64.tar.gz"
      sha256 "efd2b2ecc8e864ea54bd1fb674f234e9933bc4b10db223608f8b8525c9749d4f"
    end
    if Hardware::CPU.arm?
      url "https://github.com/sikalabs/tergum/releases/download/v0.11.1/tergum_v0.11.1_darwin_arm64.tar.gz"
      sha256 "4e256eefd5218d113e87cb37c3342f99f37d62d01bdaed1bfcca2dea50f4ac11"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/sikalabs/tergum/releases/download/v0.11.1/tergum_v0.11.1_linux_amd64.tar.gz"
      sha256 "305e7fb06d91ccb142729bf585172999cf32c6a4a2bf2bb15d0b1d86dd0b259f"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/sikalabs/tergum/releases/download/v0.11.1/tergum_v0.11.1_linux_arm64.tar.gz"
      sha256 "bfd2e76b97234bab92f8fac14e06edb42cf28e9a1b4b493220004cdf8277558c"
    end
  end

  conflicts_with "tergum"

  def install
    bin.install "tergum"
  end

  def caveats; <<~EOS
    How to use this binary: https://github.com/sikalabs/tergum
  EOS
  end

  test do
    system "#{bin}/tergum version"
  end
end
