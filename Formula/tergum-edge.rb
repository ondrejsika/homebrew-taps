# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class TergumEdge < Formula
  desc "Tergum Backup Tool"
  homepage "https://github.com/sikalabs/tergum"
  version "0.20.0"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/sikalabs/tergum/releases/download/v0.20.0/tergum_v0.20.0_darwin_amd64.tar.gz"
      sha256 "ddcf45a2a845fde893cfa5c697dccd64ee6213df355da66231f094d3958df6ef"
    end
    if Hardware::CPU.arm?
      url "https://github.com/sikalabs/tergum/releases/download/v0.20.0/tergum_v0.20.0_darwin_arm64.tar.gz"
      sha256 "c30a28a5792aac425d06a7e6e5d3871f6faaed7bf46149c06300ede1a5597aac"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/sikalabs/tergum/releases/download/v0.20.0/tergum_v0.20.0_linux_amd64.tar.gz"
      sha256 "e20dffad3b23b7f41a42d13456a80d0f9eeeb2e9ddbc11fa723e4a79f1ea5502"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/sikalabs/tergum/releases/download/v0.20.0/tergum_v0.20.0_linux_arm64.tar.gz"
      sha256 "80f93e0d0c7724305272acc193589c4fc68534b3f7f8be27beb22c9b13aa9910"
    end
  end

  conflicts_with "tergum"

  def install
    bin.install "tergum"
  end

  def caveats; <<~EOS
    How to use this binary: https://github.com/sikalabs/tergum
  EOS
  end

  test do
    system "#{bin}/tergum version"
  end
end
